# Model parameters. 
# Here we define how the audio is converted to the input that the model can use,
# the model architecture, and the log directory.
MODEL:
    # Parameters for audio segment extraction.
    AUDIO :
        SEGMENT_DUR : 1. # Duration of an audio segment the model uses in seconds.
        FS : 8000 # Sampling rate (Hz).
    # Parameters for computing the mel-spectrogram input to the model.
    INPUT:
        STFT_WIN : 1024
        STFT_HOP : 256
        F_MIN : 300. # Lowest frequency used for Melspectrogram computation.
        F_MAX : 4000. # Highest frequency used for Melspectrogram computation.
        N_MELS : 256 # Number of mel-frequency bins.
        SCALE_INPUTS: True # Scale the power mel-spectrogram to [-1,1].
    # Model architecture parameters.
    ARCHITECTURE:
        EMB_SZ : 128  # Dimension of fingerprint, d in this paper.
        BN : 'layer_norm2d' # or 'layer_norm2d' or 'batch_norm'
    # NOTE:
    # - In the current version, modifying {FS, DUR, HOB, STFT WIN, STFT HOP}
    #   may cause the model to malfunction or cause input shape mismatch errors.
    #   In that case, you will need to modify the kernel size strides of Conv
    #   layers in 'model/fp/nnfp.py'.
    LOG_ROOT_DIR : './logs/'
            # Directories to store the model checkpoints, its training process and 
            # generated embeddings (uncompressed fingerprints) will be stored.
            # The embedding directory can later be changed in generate.py

# Training parameters
TRAIN:
    # Train and Validation, and Augmentation directories
    TRACKS:
        TRAIN_ROOT : '../neural-audio-fp-dataset/discotube_2023-188000/dev/train/'
        VAL_ROOT : '../neural-audio-fp-dataset/discotube_2023-188000/dev/val/'
    # Audio segment parameters
    SEGMENTS_PER_TRACK: 59
                    # Use this many segments per track for training.
    INPUT_AUDIO_DUR : 2.
                    # Extracted audio segment duration in seconds. We use 
                    # Should MODEL['AUDIO']['SEGMENT_DUR'] seconds of audio
                    # from INPUT_AUDIO_DUR during training. It must be
                    # be greater than or equal to MODEL['AUDIO']['SEGMENT_DUR']
    # Hyperparameters
    MAX_EPOCH : 100
    BSZ:
        BATCH_SZ : 120 # Training batch size N must be EVEN number.
        N_ANCHOR : 60 # Usually N/2; N/5 for Triplet-loss. 
    LOSS:
        LOSS_MODE : 'NTxent' # 'NTxent'(default) or 'Online-Triplet'(now-playing). 
        TAU : 0.05 # **NTXENT ONLY** temperature parameter 0. < TAU < 1. 
        MARGIN : 0.5 # **ONLINE-TRIPLET ONLY** 
    OPTIMIZER : 'Adam' # 'LAMB' or 'Adam'. LAMB for BSZ >= 240
    LR:
        INITIAL_RATE: 1e-4 # Initial learning rate. Usually in the range from 3e-5 to 1e-4 (BSZ < 1280)
        SCHEDULE : 'cos' # ['cos', 'cos-restart', 'None'].
        ALPHA : 1e-4 # Minimum learning rate value for decay as a fraction of INITIAL_RATE.
    # Augmentation parameters
    AUG:
        # Time-domain augmentation parameters
        TD:
            BG : True
            BG_ROOT : '../neural-audio-fp-dataset/aug/bg/tr/'
            BG_SNR : [0, 10]
                    # Synthesize replicas using random SNR in the range of [MIN, MAX]. SNR in decibel.
            IR : True
            IR_ROOT : '../neural-audio-fp-dataset/aug/ir/tr/'
            IR_MAX_DUR : 0.5
                    # Maximum duration of the impulse response in seconds.
        # Spectral-domain augmentation parameters
        SPEC:
            CHAIN : ['cutout', 'horizontal'] 
                            # 'cutout', 'horizontal', 'vertical'
            PROBS : 1.
            N_HOLES : 1
            HOLE_FILL : 'zeros' 
                    # one of {'min', 'zeros', 'random', [min_mag, max_mag]}
    # Miscanelous
    TENSORBOARD : True
            # Tensorboard logging. If True, logs will be stored in LOG_ROOT_DIR.
    SAVE_IMG : True
            # Saving similarity matrix generated by loss object.
    MINI_TEST_IN_TRAIN : False
                    # NOTE:
                    # - MINI_TEST_IN_TRAIN=True performs mini-search-test using part of
                    #   validation dataset at the end of every epoch in training.
    REDUCE_ITEMS_P : 100
                # Reduce training tracks size to this percentage (%). 100 uses all the data.

TEST:
    # TEST tracks directories
    TRACKS:
        NOISE_ROOT : '../neural-audio-fp-dataset/discotube_2023-188000/test/noise/'
        CLEAN_QUERY_ROOT : '../neural-audio-fp-dataset/discotube_2023-188000/test/query_clean/'
        AUGMENTED_QUERY_ROOT : Null
                            # You can provide empty string to AUGMENTED_QUERY_ROOT and set
                            # TD_AUG.TS_BG_AUG=True and TD_AUG.TS_IR_AUG=True to enable
                            # real-time augmentation during testing. 
        # To create the noise files in the DB you can either specify a directory that contains
        # noise files, and the dataset will read all the .mp4 files in that directory.
        # Or a text file that contains the paths to the noise files. When NOISE_PATHS_FILE is
        # provided, NOISE_ROOT is ignored.
    # Audio segment parameters
    SEGMENT_HOP : .5 # Hop-size of the segment window in seconds.
    BATCH_SZ : 125 # Batch size for testing.
    # Augmentation parameters
    AUG:
        TD: # We only apply time-domain augmentation during testing.
                # If you set TD.BG=True or TD.IR=True, you must provide the 
                # corresponding augmentation files. Setting them to True will 
                # not use the tracks in AUGMENTED_QUERY_ROOT for testing. For simulating real life 
                    # scenarios, you should either augment the queries beforehand.
            BG : True # If you augment beforehand, set this to FALSE.
            BG_ROOT : '../neural-audio-fp-dataset/aug/bg/ts/'
                # If BG=True, you must provide the background noise files.
            BG_SNR : [0, 10] # Active in real-time synthesis of test queries.
            IR : True # If you augment beforehand, set this to False.
            IR_ROOT : '../neural-audio-fp-dataset/aug/ir/ts/'
                    # If IR=True, you must provide the background noise files.
            IR_MAX_DUR : 0.5 # Maximum duration of the impulse response in seconds.

# Device setup
DEVICE:
    CPU_N_WORKERS : 8 # 4 for minimal system. 8 is recommended.
    CPU_MAX_QUEUE : 10 # 10 for minimal system. 20 is recommended.
