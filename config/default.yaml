# TODO: add new parameters sub-segment
# Model hyper-parameters
MODEL:
    FS : 8000 # Sampling rate
    NORMALIZE_AUDIO: True # Scale the audio to [-1,1].
    STFT_WIN : 1024
    STFT_HOP : 256
    F_MIN : 300. # Frequency range.
    F_MAX : 4000. # Frequency range.
    N_MELS : 256 # Number of mel-frequency bins.
    EMB_SZ : 128  # Dimension of fingerprint, d in this paper.
    BN : 'layer_norm2d' # or 'batch_norm'
    SCALE_INPUTS: True # Scale the power mel-spectrogram to [-1,1].
    # NOTE:
    # - In the current version, modifying {FS, DUR, HOB, STFT WIN, STFT HOP}
    #   may cause the model to malfunction or cause input shape mismatch errors.
    #   In that case, you will need to modify the kernel size strides of Conv
    #   layers in 'model/fp/nnfp.py'.
    LOG_ROOT : './logs/'
            # Directories to store the model checkpoints, its training process and 
            # generated embeddings (uncompressed fingerprints) will be stored.
            # The embedding directory can later be changed in generate.py

# Training parameters
TRAIN:
    MAX_EPOCH : 100
    BSZ: # Batch-size
        TR_BATCH_SZ : 120 # Training batch size N must be EVEN number.
        TR_N_ANCHOR : 60 # Usually N/2; N/5 for Triplet-loss. 
        VAL_BATCH_SZ : 120 # Must be EVEN number.
        VAL_N_ANCHOR : 60 # Usually N_val/2 
    LOSS:
        LOSS_MODE : 'NTxent' # 'NTxent'(default) or 'Online-Triplet'(now-playing). 
        TAU : 0.05 # **NTXENT ONLY** temperature parameter 0. < TAU < 1. 
        MARGIN : 0.5 # **ONLINE-TRIPLET ONLY** 
    OPTIMIZER : 'Adam' # 'LAMB' or 'Adam'. LAMB for BSZ >= 240
    LR: # Learning rate and schedule
        INITIAL_RATE: 1e-4 # Initial learning rate. Usually in the range from 3e-5 to 1e-4 (BSZ < 1280)
        SCHEDULE : 'cos' # ['cos', 'cos-restart', 'None'].
        ALPHA : 1e-4 # Minimum learning rate value for decay as a fraction of INITIAL_RATE.
    # Time-domain augmentation parameters
    TD_AUG:
        TR_BG_AUG : True
        TR_BG_SNR : [0, 10] # Synthesize replicas using random SNR in the range of [MIN, MAX]. SNR in decibel.
        TR_IR_AUG : True
        VAL_BG_AUG : True # Validation set always follows this even in 'generate' command.
        VAL_BG_SNR : [0, 10]
        VAL_IR_AUG: True
    # Specaug parameters
    SPEC_AUG:
        SPECAUG_CHAIN : ['cutout', 'horizontal'] # 'cutout', 'horizontal', 'vertical'
        SPECAUG_PROBS : 1.
        SPECAUG_N_HOLES : 1
        SPECAUG_HOLE_FILL : 'zeros' # one of {'min', 'zeros', 'random', [min_mag, max_mag]}
    DIR:
        # Train, Validation, and Augmentation directories
        TRAIN_ROOT : '../neural-audio-fp-dataset/music/discotube_2023-188000/train/'
        VAL_ROOT : '../neural-audio-fp-dataset/music/discotube_2023-188000/val/'
        BG_ROOT : '../neural-audio-fp-dataset/aug/bg/tr/'
        IR_ROOT : '../neural-audio-fp-dataset/aug/ir/tr/'
    TENSORBOARD : True
    SAVE_IMG : True # Saving similarity matrix generated by loss object.
    MINI_TEST_IN_TRAIN : True
                    # NOTE:
                    # - MINI_TEST_IN_TRAIN=True performs mini-search-test using part of
                    #   validation dataset at the end of every epoch in training.
    REDUCE_ITEMS_P : 100
                # Reduce training tracks size to percentage (%).
    SEGMENTS_PER_TRACK: 59

TEST:
    SEGMENT_DUR : 1. # Unit segment length in seconds.
    SEGMENT_HOP : .5 # Hop-size of the segment window in seconds.
    SEGMENTS_PER_TRACK: 120 # Number of segments per track.
    # Time-domain augmentation parameters
    TD_AUG:
        BG_AUG : True # If you augment beforehand, set this to False.
        # If True, augment the query segments in real time during testing. Otherwise,
        # does not apply augmentations. For simulating real life scenarios,
        # you should either augment the queries beforehand and provide 
        # augment=True option.
        BG_AUG_SNR : [0, 10] # Active in real-time synthesis of test queries.
        IR_AUG : True # If you augment beforehand, set this to False.
        IR_AUG_MAX_DUR : 0.5 
        # If you set TD_AUG.TS_IR_AUG=True or 
        # TD_AUG.TS_BG_AUG=True, you must provide the corresponding augmentation. 
        # Setting them to True will not use the tracks in AUGMENTED_QUERY_ROOT
        # for testing.
    # TEST DATA directories
    DIR:
        NOISE_ROOT : '../neural-audio-fp-dataset/music/discotube_2023-188000/test/noise/'
        CLEAN_QUERY_ROOT : '../neural-audio-fp-dataset/music/discotube_2023-188000/test/query_clean/'
        AUGMENTED_QUERY_ROOT : Null
                            # You can provide empty string to AUGMENTED_QUERY_ROOT and set
                            # TD_AUG.TS_BG_AUG=True and TD_AUG.TS_IR_AUG=True to enable
                            # real-time augmentation during testing. 
        # To create the noise files in the DB you can either specify a directory that contains
        # noise files, and the dataset will read all the .mp4 files in that directory.
        # Or a text file that contains the paths to the noise files. When NOISE_PATHS_FILE is
        # provided, NOISE_ROOT is ignored.
        BG_ROOT : '../neural-audio-fp-dataset/aug/bg/ts/'
        IR_ROOT : '../neural-audio-fp-dataset/aug/ir/ts/'

# Device setup
DEVICE:
    CPU_N_WORKERS : 8 # 4 for minimal system. 8 is recommended.
    CPU_MAX_QUEUE : 10 # 10 for minimal system. 20 is recommended.
